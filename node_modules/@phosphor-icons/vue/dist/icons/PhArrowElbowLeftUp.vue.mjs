import { defineComponent as m, inject as a, computed as n, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as H, createCommentVNode as y, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, V = /* @__PURE__ */ o("path", { d: "M244,192a12,12,0,0,1-12,12H88a12,12,0,0,1-12-12V77L48.49,104.49a12,12,0,0,1-17-17l48-48a12,12,0,0,1,17,0l48,48a12,12,0,0,1-17,17L100,77V180H232A12,12,0,0,1,244,192Z" }, null, -1), L = [
  V
], M = { key: 1 }, A = /* @__PURE__ */ o("path", {
  d: "M136,96H40L88,48Z",
  opacity: "0.2"
}, null, -1), k = /* @__PURE__ */ o("path", { d: "M232,184H96V104h40a8,8,0,0,0,5.66-13.66l-48-48a8,8,0,0,0-11.32,0l-48,48A8,8,0,0,0,40,104H80v88a8,8,0,0,0,8,8H232a8,8,0,0,0,0-16ZM88,59.31,116.69,88H59.31Z" }, null, -1), Z = [
  A,
  k
], x = { key: 2 }, S = /* @__PURE__ */ o("path", { d: "M240,192a8,8,0,0,1-8,8H88a8,8,0,0,1-8-8V104H40a8,8,0,0,1-5.66-13.66l48-48a8,8,0,0,1,11.32,0l48,48A8,8,0,0,1,136,104H96v80H232A8,8,0,0,1,240,192Z" }, null, -1), z = [
  S
], C = { key: 3 }, B = /* @__PURE__ */ o("path", { d: "M238,192a6,6,0,0,1-6,6H88a6,6,0,0,1-6-6V62.49L44.24,100.24a6,6,0,0,1-8.48-8.48l48-48a6,6,0,0,1,8.48,0l48,48a6,6,0,1,1-8.48,8.48L94,62.49V186H232A6,6,0,0,1,238,192Z" }, null, -1), b = [
  B
], E = { key: 4 }, N = /* @__PURE__ */ o("path", { d: "M240,192a8,8,0,0,1-8,8H88a8,8,0,0,1-8-8V67.31L45.66,101.66A8,8,0,0,1,34.34,90.34l48-48a8,8,0,0,1,11.32,0l48,48a8,8,0,0,1-11.32,11.32L96,67.31V184H232A8,8,0,0,1,240,192Z" }, null, -1), P = [
  N
], W = { key: 5 }, $ = /* @__PURE__ */ o("path", { d: "M236,192a4,4,0,0,1-4,4H88a4,4,0,0,1-4-4V57.66L42.83,98.83a4,4,0,0,1-5.66-5.66l48-48a4,4,0,0,1,5.66,0l48,48a4,4,0,0,1-5.66,5.66L92,57.66V188H232A4,4,0,0,1,236,192Z" }, null, -1), j = [
  $
], U = {
  name: "PhArrowElbowLeftUp"
}, F = /* @__PURE__ */ m({
  ...U,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const l = d, c = a("weight", "regular"), _ = a("size", "1em"), h = a("color", "currentColor"), u = a("mirrored", !1), s = n(() => l.weight ?? c), i = n(() => l.size ?? _), p = n(() => l.color ?? h), g = n(() => l.mirrored !== void 0 ? l.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, q) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: p.value,
      transform: g.value
    }, r.$attrs), [
      H(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", w, L)) : s.value === "duotone" ? (t(), e("g", M, Z)) : s.value === "fill" ? (t(), e("g", x, z)) : s.value === "light" ? (t(), e("g", C, b)) : s.value === "regular" ? (t(), e("g", E, P)) : s.value === "thin" ? (t(), e("g", W, j)) : y("", !0)
    ], 16, f));
  }
});
export {
  F as default
};
