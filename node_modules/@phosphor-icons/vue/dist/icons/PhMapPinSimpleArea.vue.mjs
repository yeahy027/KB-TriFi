import { defineComponent as m, inject as a, computed as n, openBlock as t, createElementBlock as e, mergeProps as C, renderSlot as M, createCommentVNode as Z, createElementVNode as o } from "vue";
const v = ["width", "height", "fill", "transform"], y = { key: 0 }, V = /* @__PURE__ */ o("path", { d: "M116,106.32V176a12,12,0,0,0,24,0V106.32a44,44,0,1,0-24,0ZM128,44a20,20,0,1,1-20,20A20,20,0,0,1,128,44ZM244,176c0,21.59-23.9,34-38.15,39.48C184.86,223.56,157.22,228,128,228c-57.64,0-116-17.86-116-52,0-22.23,26.12-40.2,69.88-48.06a12,12,0,1,1,4.24,23.62C51.93,157.71,36,169.78,36,176c0,4,7.12,11.07,22.77,17.08,18.3,7,42.89,10.92,69.23,10.92s50.93-3.88,69.23-10.92C212.87,187.07,220,180,220,176c0-6.22-15.93-18.29-50.12-24.44a12,12,0,1,1,4.24-23.62C217.88,135.8,244,153.77,244,176Z" }, null, -1), A = [
  V
], f = { key: 1 }, w = /* @__PURE__ */ o("path", {
  d: "M160,64a32,32,0,1,1-32-32A32,32,0,0,1,160,64Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M120,103.2V176a8,8,0,0,0,16,0V103.2a40,40,0,1,0-16,0ZM128,40a24,24,0,1,1-24,24A24,24,0,0,1,128,40ZM240,176c0,31.18-57.71,48-112,48S16,207.18,16,176c0-7.74,3.81-19.13,22-29.41,12.26-6.94,29.12-12.27,48.77-15.42A8,8,0,1,1,89.27,147c-17.54,2.82-33,7.63-43.42,13.55C37.05,165.5,32,171.14,32,176c0,13.36,36.52,32,96,32s96-18.64,96-32c0-4.86-5.05-10.5-13.85-15.49-10.46-5.92-25.88-10.73-43.42-13.55a8,8,0,1,1,2.54-15.79c19.65,3.15,36.51,8.48,48.77,15.42C236.19,156.87,240,168.26,240,176Z" }, null, -1), k = [
  w,
  S
], x = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M88,64a40,40,0,1,1,48,39.19V176a8,8,0,0,1-16,0V103.19A40.05,40.05,0,0,1,88,64Zm130,82.59c-12.26-6.94-29.12-12.27-48.77-15.42A8,8,0,1,0,166.73,147c17.54,2.82,33,7.63,43.42,13.55C219,165.5,224,171.14,224,176c0,13.36-36.52,32-96,32s-96-18.64-96-32c0-4.86,5-10.5,13.85-15.49,10.46-5.92,25.88-10.73,43.42-13.55a8,8,0,1,0-2.54-15.79c-19.65,3.15-36.51,8.48-48.77,15.42C19.81,156.87,16,168.26,16,176c0,31.18,57.71,48,112,48s112-16.82,112-48C240,168.26,236.19,156.87,218,146.59Z" }, null, -1), B = [
  z
], N = { key: 3 }, P = /* @__PURE__ */ o("path", { d: "M122,101.52V176a6,6,0,0,0,12,0V101.52a38,38,0,1,0-12,0ZM128,38a26,26,0,1,1-26,26A26,26,0,0,1,128,38ZM238,176c0,13.34-12.18,25.38-34.31,33.88C183.38,217.7,156.5,222,128,222s-55.38-4.3-75.69-12.12C30.18,201.38,18,189.34,18,176c0-19.6,26.46-36,69.05-42.86A6,6,0,0,1,89,145c-18,2.89-33.27,7.66-44.09,13.78C35.28,164.2,30,170.32,30,176c0,16.08,40.25,34,98,34s98-17.92,98-34c0-5.68-5.28-11.8-14.86-17.23-10.82-6.12-26.07-10.89-44.09-13.78a6,6,0,0,1,1.9-11.85C211.54,140,238,156.4,238,176Z" }, null, -1), b = [
  P
], E = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M120,103.2V176a8,8,0,0,0,16,0V103.2a40,40,0,1,0-16,0ZM128,40a24,24,0,1,1-24,24A24,24,0,0,1,128,40ZM240,176c0,31.18-57.71,48-112,48S16,207.18,16,176c0-7.74,3.81-19.13,22-29.41,12.26-6.94,29.12-12.27,48.77-15.42A8,8,0,1,1,89.27,147c-17.54,2.82-33,7.63-43.42,13.55C37.05,165.5,32,171.14,32,176c0,13.36,36.52,32,96,32s96-18.64,96-32c0-4.86-5.05-10.5-13.85-15.49-10.46-5.92-25.88-10.73-43.42-13.55a8,8,0,1,1,2.54-15.79c19.65,3.15,36.51,8.48,48.77,15.42C236.19,156.87,240,168.26,240,176Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M124,99.77V176a4,4,0,0,0,8,0V99.77a36,36,0,1,0-8,0ZM128,36a28,28,0,1,1-28,28A28,28,0,0,1,128,36ZM236,176c0,12.46-11.73,23.83-33,32-20.09,7.73-46.72,12-75,12s-54.89-4.25-75-12c-21.29-8.19-33-19.56-33-32,0-18.55,25.81-34.22,67.37-40.88A4,4,0,1,1,88.63,143C52.93,148.74,28,162.3,28,176c0,17.39,40.18,36,100,36s100-18.61,100-36c0-13.7-24.93-27.26-60.63-33a4,4,0,1,1,1.26-7.89C210.19,141.78,236,157.45,236,176Z" }, null, -1), D = [
  q
], F = {
  name: "PhMapPinSimpleArea"
}, I = /* @__PURE__ */ m({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(r) {
    const c = r, d = a("weight", "regular"), _ = a("size", "1em"), h = a("color", "currentColor"), p = a("mirrored", !1), s = n(() => c.weight ?? d), i = n(() => c.size ?? _), u = n(() => c.color ?? h), g = n(() => c.mirrored !== void 0 ? c.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (l, G) => (t(), e("svg", C({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: i.value,
      height: i.value,
      fill: u.value,
      transform: g.value
    }, l.$attrs), [
      M(l.$slots, "default"),
      s.value === "bold" ? (t(), e("g", y, A)) : s.value === "duotone" ? (t(), e("g", f, k)) : s.value === "fill" ? (t(), e("g", x, B)) : s.value === "light" ? (t(), e("g", N, b)) : s.value === "regular" ? (t(), e("g", E, $)) : s.value === "thin" ? (t(), e("g", j, D)) : Z("", !0)
    ], 16, v));
  }
});
export {
  I as default
};
