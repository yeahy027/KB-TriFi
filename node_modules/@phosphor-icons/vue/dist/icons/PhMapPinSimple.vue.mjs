import { defineComponent as g, inject as i, computed as a, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as y, createCommentVNode as V, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], Z = { key: 0 }, A = /* @__PURE__ */ o("path", { d: "M188,72a60,60,0,1,0-72,58.79V232a12,12,0,0,0,24,0V130.79A60.09,60.09,0,0,0,188,72Zm-60,36a36,36,0,1,1,36-36A36,36,0,0,1,128,108Z" }, null, -1), w = [
  A
], M = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M176,72a48,48,0,1,1-48-48A48,48,0,0,1,176,72Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M184,72a56,56,0,1,0-64,55.42V232a8,8,0,0,0,16,0V127.42A56.09,56.09,0,0,0,184,72Zm-56,40a40,40,0,1,1,40-40A40,40,0,0,1,128,112Z" }, null, -1), x = [
  k,
  S
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M136,127.42V232a8,8,0,0,1-16,0V127.42a56,56,0,1,1,16,0Z" }, null, -1), B = [
  C
], N = { key: 3 }, P = /* @__PURE__ */ o("path", { d: "M182,72a54,54,0,1,0-60,53.66V232a6,6,0,0,0,12,0V125.66A54.07,54.07,0,0,0,182,72Zm-54,42a42,42,0,1,1,42-42A42,42,0,0,1,128,114Z" }, null, -1), b = [
  P
], E = { key: 4 }, W = /* @__PURE__ */ o("path", { d: "M184,72a56,56,0,1,0-64,55.42V232a8,8,0,0,0,16,0V127.42A56.09,56.09,0,0,0,184,72Zm-56,40a40,40,0,1,1,40-40A40,40,0,0,1,128,112Z" }, null, -1), $ = [
  W
], j = { key: 5 }, q = /* @__PURE__ */ o("path", { d: "M180,72a52,52,0,1,0-56,51.83V232a4,4,0,0,0,8,0V123.83A52.05,52.05,0,0,0,180,72Zm-52,44a44,44,0,1,1,44-44A44.05,44.05,0,0,1,128,116Z" }, null, -1), D = [
  q
], F = {
  name: "PhMapPinSimple"
}, I = /* @__PURE__ */ g({
  ...F,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, c = i("weight", "regular"), _ = i("size", "1em"), h = i("color", "currentColor"), p = i("mirrored", !1), s = a(() => n.weight ?? c), l = a(() => n.size ?? _), u = a(() => n.color ?? h), m = a(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (r, G) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: u.value,
      transform: m.value
    }, r.$attrs), [
      y(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", Z, w)) : s.value === "duotone" ? (t(), e("g", M, x)) : s.value === "fill" ? (t(), e("g", z, B)) : s.value === "light" ? (t(), e("g", N, b)) : s.value === "regular" ? (t(), e("g", E, $)) : s.value === "thin" ? (t(), e("g", j, D)) : V("", !0)
    ], 16, f));
  }
});
export {
  I as default
};
