import { defineComponent as H, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as g, renderSlot as v, createCommentVNode as y, createElementVNode as o } from "vue";
const Z = ["width", "height", "fill", "transform"], f = { key: 0 }, w = /* @__PURE__ */ o("path", { d: "M212,208a12,12,0,0,1-12,12H48a12,12,0,0,1,0-24H200A12,12,0,0,1,212,208Zm-12-52H104a44,44,0,0,1,0-88h96a12,12,0,0,0,0-24H104a68,68,0,0,0,0,136h96a12,12,0,0,0,0-24Z" }, null, -1), M = [
  w
], k = { key: 1 }, A = /* @__PURE__ */ o("path", {
  d: "M200,56V168H104a56,56,0,0,1,0-112Z",
  opacity: "0.2"
}, null, -1), S = /* @__PURE__ */ o("path", { d: "M208,208a8,8,0,0,1-8,8H48a8,8,0,0,1,0-16H200A8,8,0,0,1,208,208Zm-8-48H104a48,48,0,0,1,0-96h96a8,8,0,0,0,0-16H104a64,64,0,0,0,0,128h96a8,8,0,0,0,0-16Z" }, null, -1), x = [
  A,
  S
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM176,184H80a8,8,0,0,1,0-16h96a8,8,0,0,1,0,16Zm-64-48h64a8,8,0,0,1,0,16H112a40,40,0,0,1,0-80h64a8,8,0,0,1,0,16H112a24,24,0,0,0,0,48Z" }, null, -1), V = [
  C
], B = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M206,208a6,6,0,0,1-6,6H48a6,6,0,0,1,0-12H200A6,6,0,0,1,206,208Zm-6-46H104a50,50,0,0,1,0-100h96a6,6,0,0,0,0-12H104a62,62,0,0,0,0,124h96a6,6,0,0,0,0-12Z" }, null, -1), N = [
  b
], E = { key: 4 }, P = /* @__PURE__ */ o("path", { d: "M208,208a8,8,0,0,1-8,8H48a8,8,0,0,1,0-16H200A8,8,0,0,1,208,208Zm-8-48H104a48,48,0,0,1,0-96h96a8,8,0,0,0,0-16H104a64,64,0,0,0,0,128h96a8,8,0,0,0,0-16Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M204,208a4,4,0,0,1-4,4H48a4,4,0,0,1,0-8H200A4,4,0,0,1,204,208Zm-4-44H104a52,52,0,0,1,0-104h96a4,4,0,0,0,0-8H104a60,60,0,0,0,0,120h96a4,4,0,0,0,0-8Z" }, null, -1), O = [
  j
], q = {
  name: "PhSubsetOf"
}, G = /* @__PURE__ */ H({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const s = h, d = n("weight", "regular"), c = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), a = i(() => s.weight ?? d), l = i(() => s.size ?? c), p = i(() => s.color ?? _), m = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", g({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: p.value,
      transform: m.value
    }, r.$attrs), [
      v(r.$slots, "default"),
      a.value === "bold" ? (t(), e("g", f, M)) : a.value === "duotone" ? (t(), e("g", k, x)) : a.value === "fill" ? (t(), e("g", z, V)) : a.value === "light" ? (t(), e("g", B, N)) : a.value === "regular" ? (t(), e("g", E, W)) : a.value === "thin" ? (t(), e("g", $, O)) : y("", !0)
    ], 16, Z));
  }
});
export {
  G as default
};
