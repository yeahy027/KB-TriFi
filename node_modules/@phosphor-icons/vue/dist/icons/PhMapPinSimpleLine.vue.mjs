import { defineComponent as m, inject as a, computed as i, openBlock as t, createElementBlock as e, mergeProps as v, renderSlot as H, createCommentVNode as y, createElementVNode as o } from "vue";
const M = ["width", "height", "fill", "transform"], V = { key: 0 }, f = /* @__PURE__ */ o("path", { d: "M216,204H140V138.79a60,60,0,1,0-24,0V204H40a12,12,0,0,0,0,24H216a12,12,0,0,0,0-24ZM92,80a36,36,0,1,1,36,36A36,36,0,0,1,92,80Z" }, null, -1), Z = [
  f
], w = { key: 1 }, k = /* @__PURE__ */ o("path", {
  d: "M176,80a48,48,0,1,1-48-48A48,48,0,0,1,176,80Z",
  opacity: "0.2"
}, null, -1), A = /* @__PURE__ */ o("path", { d: "M216,208H136V135.42a56,56,0,1,0-16,0V208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM88,80a40,40,0,1,1,40,40A40,40,0,0,1,88,80Z" }, null, -1), S = [
  k,
  A
], x = { key: 2 }, z = /* @__PURE__ */ o("path", { d: "M224,216a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16h80V135.42a56,56,0,1,1,16,0V208h80A8,8,0,0,1,224,216Z" }, null, -1), C = [
  z
], B = { key: 3 }, N = /* @__PURE__ */ o("path", { d: "M216,210H134V133.66a54,54,0,1,0-12,0V210H40a6,6,0,0,0,0,12H216a6,6,0,0,0,0-12ZM86,80a42,42,0,1,1,42,42A42,42,0,0,1,86,80Z" }, null, -1), P = [
  N
], b = { key: 4 }, E = /* @__PURE__ */ o("path", { d: "M216,208H136V135.42a56,56,0,1,0-16,0V208H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM88,80a40,40,0,1,1,40,40A40,40,0,0,1,88,80Z" }, null, -1), W = [
  E
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M216,212H132V131.83a52,52,0,1,0-8,0V212H40a4,4,0,0,0,0,8H216a4,4,0,0,0,0-8ZM84,80a44,44,0,1,1,44,44A44.05,44.05,0,0,1,84,80Z" }, null, -1), L = [
  j
], q = {
  name: "PhMapPinSimpleLine"
}, G = /* @__PURE__ */ m({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(d) {
    const n = d, c = a("weight", "regular"), _ = a("size", "1em"), h = a("color", "currentColor"), p = a("mirrored", !1), s = i(() => n.weight ?? c), l = i(() => n.size ?? _), u = i(() => n.color ?? h), g = i(() => n.mirrored !== void 0 ? n.mirrored ? "scale(-1, 1)" : void 0 : p ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", v({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: u.value,
      transform: g.value
    }, r.$attrs), [
      H(r.$slots, "default"),
      s.value === "bold" ? (t(), e("g", V, Z)) : s.value === "duotone" ? (t(), e("g", w, S)) : s.value === "fill" ? (t(), e("g", x, C)) : s.value === "light" ? (t(), e("g", B, P)) : s.value === "regular" ? (t(), e("g", b, W)) : s.value === "thin" ? (t(), e("g", $, L)) : y("", !0)
    ], 16, M));
  }
});
export {
  G as default
};
