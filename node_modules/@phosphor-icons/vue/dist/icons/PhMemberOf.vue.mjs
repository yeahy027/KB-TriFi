import { defineComponent as g, inject as n, computed as i, openBlock as t, createElementBlock as e, mergeProps as m, renderSlot as v, createCommentVNode as y, createElementVNode as o } from "vue";
const f = ["width", "height", "fill", "transform"], w = { key: 0 }, M = /* @__PURE__ */ o("path", { d: "M200,140H61.08A68.1,68.1,0,0,0,128,196h72a12,12,0,0,1,0,24H128a92,92,0,0,1,0-184h72a12,12,0,0,1,0,24H128a68.1,68.1,0,0,0-66.92,56H200a12,12,0,0,1,0,24Z" }, null, -1), k = [
  M
], A = { key: 1 }, Z = /* @__PURE__ */ o("path", {
  d: "M200,48V208H128a80,80,0,0,1-80-80h0a80,80,0,0,1,80-80Z",
  opacity: "0.2"
}, null, -1), x = /* @__PURE__ */ o("path", { d: "M200,136H56.46A72.08,72.08,0,0,0,128,200h72a8,8,0,0,1,0,16H128a88,88,0,0,1,0-176h72a8,8,0,0,1,0,16H128a72.08,72.08,0,0,0-71.54,64H200a8,8,0,0,1,0,16Z" }, null, -1), S = [
  Z,
  x
], z = { key: 2 }, C = /* @__PURE__ */ o("path", { d: "M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32Zm-32,88a8,8,0,0,1,0,16H80.68A48.07,48.07,0,0,0,128,176h48a8,8,0,0,1,0,16H128a64,64,0,0,1,0-128h48a8,8,0,0,1,0,16H128a48.07,48.07,0,0,0-47.32,40Z" }, null, -1), V = [
  C
], B = { key: 3 }, b = /* @__PURE__ */ o("path", { d: "M200,134H54.26A74.09,74.09,0,0,0,128,202h72a6,6,0,0,1,0,12H128a86,86,0,0,1,0-172h72a6,6,0,0,1,0,12H128a74.09,74.09,0,0,0-73.74,68H200a6,6,0,0,1,0,12Z" }, null, -1), N = [
  b
], E = { key: 4 }, P = /* @__PURE__ */ o("path", { d: "M200,136H56.46A72.08,72.08,0,0,0,128,200h72a8,8,0,0,1,0,16H128a88,88,0,0,1,0-176h72a8,8,0,0,1,0,16H128a72.08,72.08,0,0,0-71.54,64H200a8,8,0,0,1,0,16Z" }, null, -1), W = [
  P
], $ = { key: 5 }, j = /* @__PURE__ */ o("path", { d: "M200,132H52.11A76.09,76.09,0,0,0,128,204h72a4,4,0,0,1,0,8H128a84,84,0,0,1,0-168h72a4,4,0,0,1,0,8H128a76.09,76.09,0,0,0-75.89,72H200a4,4,0,0,1,0,8Z" }, null, -1), O = [
  j
], q = {
  name: "PhMemberOf"
}, G = /* @__PURE__ */ g({
  ...q,
  props: {
    weight: {
      type: String
    },
    size: {
      type: [String, Number]
    },
    color: {
      type: String
    },
    mirrored: {
      type: Boolean
    }
  },
  setup(h) {
    const s = h, d = n("weight", "regular"), c = n("size", "1em"), _ = n("color", "currentColor"), u = n("mirrored", !1), a = i(() => s.weight ?? d), l = i(() => s.size ?? c), p = i(() => s.color ?? _), H = i(() => s.mirrored !== void 0 ? s.mirrored ? "scale(-1, 1)" : void 0 : u ? "scale(-1, 1)" : void 0);
    return (r, D) => (t(), e("svg", m({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 256 256",
      width: l.value,
      height: l.value,
      fill: p.value,
      transform: H.value
    }, r.$attrs), [
      v(r.$slots, "default"),
      a.value === "bold" ? (t(), e("g", w, k)) : a.value === "duotone" ? (t(), e("g", A, S)) : a.value === "fill" ? (t(), e("g", z, V)) : a.value === "light" ? (t(), e("g", B, N)) : a.value === "regular" ? (t(), e("g", E, W)) : a.value === "thin" ? (t(), e("g", $, O)) : y("", !0)
    ], 16, f));
  }
});
export {
  G as default
};
